第15章 泛型

    15.9 边界
        1. Java泛型重用了extends关键字，class必须在interface之前
            <T extends class & interface & interface>
        2. 超类型通配符 <? super MyClass> MyClass类型或者MyCalss子类型
        3. 无界通配符<?> 编译器很少关注是原生类型还是<?>,<?>更像是一种装饰
    15.11 问题
        1. 任何基本类型都不能作为类型参数，可将基本类型转为其包装类型使用。
        2. 自动包装机制不能应用于数组。
        3. 一个类不能实现同一个泛型接口的两种变体，由于擦除的原因，这两个变体会成为相同接口。
        4. 使用带有泛型类型参数的转型或instanceof不会有任何效果。
        5. 由于擦除的原因，重载方法将产生相同类型的方法名。
        6. 基类劫持接口。（详见15.11.5节）
    15.16 潜在类型机制
        1. 潜在类型机制是一种代码组织和复用的机制。
        2. 潜在类型机制不要求静态或动态的类型检查。